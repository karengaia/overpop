//Translate this javascript into PHP --

var arrPopDate = new Array(
"07/01/2003",  6302486693,
"08/01/2003",  6308703241,
"09/01/2003",  6314919789,
"10/01/2003",  6320935803,
"11/01/2003",  6327152352,
"12/01/2003",  6333168366,
"01/01/2004",  6339384914,
"02/01/2004",  6345601463,
"03/01/2004",  6351416943,
"04/01/2004",  6357633491,
"05/01/2004",  6363649506,
"06/01/2004",  6369866054,
"07/01/2004",  6375882069
);

var len = 28;
var x=2;

for (; x < (len - 1); x+=2)
  {
   y=str2Date(arrPopDate[x]);

   if (y < nowDate )
      break;
  }

var endDate = str2Date(arrPopDate[x]);
var begDate = str2Date(arrPopDate[x-2]);
bgt=begDate.getTime();

var msecsInMo = Math.round( endDate.getTime()- bgt );
//var msecsInMoTodate = Math.round( nowDate.getTime() - bgt);
var msecsInMoTodate = Math.round(GMTdate.getTime() - bgt);
var popBeg = arrPopDate[x-1];
var popEnd = arrPopDate[x+1];

var pop = popBeg + Math.round( (msecsInMoTodate/msecsInMo) * (popEnd - popBeg) );
pop = "" + pop



~~~~~~~~

// english notation without thousands seperator
$english_format_number = number_format($number, 2, '.', '');
// 1234.57


~~~~

function time_to_sec($time) {
    $hours = substr($time, 0, -6);
    $minutes = substr($time, -5, 2);
    $seconds = substr($time, -2);

    return $hours * 3600 + $minutes * 60 + $seconds;
}

date_create_from_format — Alias of DateTime::createFromFormat()

$date = DateTime::createFromFormat('j-M-Y', '15-Feb-2009');

$date = DateTime::createFromFormat('Y-m-d', '2009-02-15');

print time(); Time based in the amount of seconds that have passed since January 1 1970 00:00:00 GMT.


gmdate(format,timestamp);  /* DON'T NEED */

    * U - The seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)
    *  d - The day of the month (from 01 to 31)
    * D - A textual representation of a day (three letters)
    * j - The day of the month without leading zeros (1 to 31)
    * l (lowercase 'L') - A full textual representation of a day
    * N - The ISO-8601 numeric representation of a day (1 for Monday through 7 for Sunday)
    * S - The English ordinal suffix for the day of the month (2 characters st, nd, rd or th. Works well with j)
    * w - A numeric representation of the day (0 for Sunday through 6 for Saturday)
    * z - The day of the year (from 0 through 365)
    * W - The ISO-8601 week number of year (weeks starting on Monday)
    * F - A full textual representation of a month (January through December)
    * m - A numeric representation of a month (from 01 to 12)
    * M - A short textual representation of a month (three letters)
    * n - A numeric representation of a month, without leading zeros (1 to 12)
    * t - The number of days in the given month
    * L - Whether it's a leap year (1 if it is a leap year, 0 otherwise)
    * o - The ISO-8601 year number
    * Y - A four digit representation of a year
    * y - A two digit representation of a year
    * a - Lowercase am or pm
    * A - Uppercase AM or PM
    * B - Swatch Internet time (000 to 999)
    * g - 12-hour format of an hour (1 to 12)
    * G - 24-hour format of an hour (0 to 23)
    * h - 12-hour format of an hour (01 to 12)
    * H - 24-hour format of an hour (00 to 23)
    * i - Minutes with leading zeros (00 to 59)
    * s - Seconds, with leading zeros (00 to 59)
    * e - The timezone identifier (Examples: UTC, Atlantic/Azores)
    * I (capital i) - Whether the date is in daylights savings time (1 if Daylight Savings Time, 0 otherwise)
    * O - Difference to Greenwich time (GMT) in hours (Example: +0100)
    * T - Timezone setting of the PHP machine (Examples: EST, MDT)
    * Z - Returns 0
    * c - The ISO-8601 date (e.g. 2004-02-12T15:19:21+00:00)
    * r - The RFC 2822 formatted date (e.g. Thu, 21 Dec 2000 16:01:07 +0200)
    * U - The seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)

~~~~


$array[$j][$k]

for ($number = 1; $number < 11; $number++)
{ echo "$number <br>"; }

~~~~~

$pieces = explode(" ", $pizza);
list($user, $pass, $uid, $gid, $gecos, $home, $shell) = explode(":", $data);